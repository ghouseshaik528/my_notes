//for starting a development web server
// goto cmd and type

php -S localhost:4000

//create a folder in c:\users\areeb\foldername
//ex: C:\users\areeb\php_site
//go to that folder and add a new file filename.php
//ex: site.php

goto site.php file and type the code

<!DOCTYPE html>
<html>
<head>
	<title>Php Site</title>
</head>
<body>

	<?php
		echo("Hello World")
	?>

</body>
</html>

//goto your browser and type localhost:4000\php_site\site.php
-u will see the output as
Hello World
------------------------------------------------------------------------------------------------------------------------

Variables: are containers where you can store a piece of information.
- to create a variable type $ sign at starting of the string
ex:

$characterName = "Areeb"
$characterAge=25

echo "Hi this is $characterName";
echo "my age is $characterAge";
echo "Hey this is $characterName";
echo "my age is $characterage";
<?php
	//setting the timezone to indian standard
	date_default_timezone_set('Asia/Kolkata');

	//date function to get the current year,month and date
	$today = date('y-m-d');

	print "<p><b>Today is $today.</p></b>";

	//getting time in hours,minutes and seconds
	$time = date('h:i:s a');
	echo "<p>Time is $time.</p>";
	print("<p> You can use parenthesis in print,");
	echo "or echo statement to print the line in web page.</p>";
?>
-----------------------------------------------------------------------------------------------------------------------
Datatypes: 
----------
$var = "This is a string. ";
$num = 60;
$guess= 3.95;
$isMale = True;
echo "$var";

-----------------------------------------------------------------------------------------------------------------------
Working with strings:
---------------------
string substr ( string $string , int $start [, int $length ] )
Returns the portion of string specified by the start and length parameters.

		<?php
			$rest = substr("abcdef", -1);    // returns "f"
			$rest = substr("abcdef", -2);    // returns "ef"
			$rest = substr("abcdef", -3, 1); // returns "d"
			echo substr('abcdef', 1);     // bcdef
			echo substr('abcdef', 1, 3);  // bcd
			echo substr('abcdef', 0, 4);  // abcd
			echo substr('abcdef', 0, 8);  // abcdef
			echo substr('abcdef', -1, 1); // f
			
			// Accessing single characters in a string
			// can also be achieved using "square brackets"
			$string = 'abcdef';
			echo $string[0];                 // a
			echo $string[3];                 // d
			echo $string[strlen($string)-1]; // f
		
			$phrase = "Areeb Academy";
		
			//to convert string into lower case
			echo strtolower($phrase);  	//returns areeb academy

			//to convert string into upper case
			echo strtoupper($phrase);  	//returns AREEB ACADEMY

			//to find the length of the string
			echo strlen($phrase);  		//returns 13

			//to find the position of the string which is called as indexing
			echo $phrase[0];  //returns A
			$phrase[0] = 'G'; #we can change the string by indexing.
			echo $phrase; //returns Greeb Academy

			//to replace the string
			//syntax: str_replace(search, replace, subject)
			echo str_replace('Areeb','Rafi',$phrase); //returns Rafi Academy

Note:
Version			Description
7.0.0  			If string is equal to start characters long, an empty string will be returned. Prior to this version,
				FALSE was returned in this case.
5.2.2 - 5.2.6	If the start parameter indicates the position of a negative truncation or beyond, false is returned. 

Other versions get the string from start.
-----------------------------------------------------------------------------------------------------------------------

working with numbers:

		echo 5-2;		//returns 3
		echo 5/2;		//returns 2.5
		echo 5%2;		//returns 1
		echo 4+2*3;		//returns 10
		echo (4+3)*5;	//returns 35
		$num=10;
		$num++;
		echo $num;		//returns 11
		$num--;
		echo $num;		//returns 10
		$num+=5
		echo $num;		//returns 15
		echo abs(-100);	//returns 100
		echo pow(2,5); 	//returns 125
		echo sqrt(144); //returns 12
		echo max(2,10); //returns 10
		echo min(2,10); //returns 2
		echo round(3.2);//returns 3
		echo ceil(3.3);	//returns 4	-it will round up to 4
		echo floor(3.9);//returns 3 -it will round down to 3

-----------------------------------------------------------------------------------------------------------------------

Getting user input:

<form action="site.php" method="get">
 		Name: <input type="text" name="name">
 		<br/><br/>
 		Age: <input type="number" name="age">
 		<br><br>

 	 	Your name is :<?php echo $_GET['name'] ?>
 	 	<br>
 	 	Your age is :<?php echo $_GET['age']?>
 	 	<br><br>

 	 <!--Addition of two numbers -->
 	 
 	 	Number 1:<input type="number" name="num1">
 	 	<br><br>
 	 	Number 2:<input type="number" name="num2">
 	 	<br><br>
 	 	<input type="submit">
 	 	<br><br>
 	 
 	 	Ans:<?php echo $_GET['num1'] + $_GET['num2'] ?>

</form>

Note: you can also change the values that are present in the url and check the result

-----------------------------------------------------------------------------------------------------------------------

Building a mad libs game:

<form action="site.php" method="GET">
 		<input type="text" name="movie"><br><br>
 		<input type="text" name="abroad"><br><br>
 		<input type="text" name="phone"><br><br>

 		<input type="submit">
 	</form>

 	<?php
 		$cinema = $_GET['movie'];
 		$gulf = $_GET['abroad'];
 		$mobile= $_GET['phone'];
 		echo "My favourite movie is $cinema<br>";
 		echo "I don't want to go $gulf<br>";
 		echo "$mobile is in good condition<br>";
 	?>

-----------------------------------------------------------------------------------------------------------------------
Using SELECT_Statements:
------------------------
<form method="post" action='101_Simple_forms.php'>
		<p>
		Name:<input type="text" name="firstname"><br />
		</p>
		<p>
		<input type="submit" value='Submit Information'>
		</p>
</form>
<?php
	$firstname = $_POST['firstname'];
	print "<p><b>Congratulations $firstname</b></p>";
?>
-----------------------------------------------------------------------------------------------------------------------
Using text_area:
----------------
<form method="post" action="103_using_textarea.php">
	<p>
		Name:<br/>
		<input type="text" name="firstname">
	</p>
	<p>
		Comments:<br/>
		<textarea rows="7" cols="50" name='Comments'></textarea>
	</p>
	<p>
		<input type="submit" value="Submit Information">
	</p>-----------------
</form>
<?php
		$firstname = $_POST['firstname'];
		$Comments = $_POST['Comments'];
		print "<p>You are <span class='textblue'>$firstname</span>";
		print " and your <span class='textblue'>comments</span> are:</p>";
		print "<p><textarea rows='6' cols='50' disabled='disabled'>";
		print "$Comments</textarea></p>";
?>
-----------------------------------------------------------------------------------------------------------------------
Using Checkboxes: 
-----------------	
Example-1:
----------
<form action='site.php' method="post">
	Apples: <input type="checkbox" name="fruits[]" value='apples'><br>
	Oranges: <input type="checkbox" name="fruits[]" value='oranges'><br>
	Pineapple: <input type="checkbox" name="fruits[]" value='Pineapple'><br><br>
 	<input type="submit">
 	<br><br>
<?php 
	$fruits = $_POST['fruits'];
	echo $fruits[0];
	echo '<br>';
	echo $fruits[1];
	echo '<br>';
	echo $fruits[2];
?>
</form>

Example-2:
----------
<form method='post' action='105_using_checkboxes.php'>
	<p>
		Name:<input type="text" name="firstname" size="30">
	</p>
	<p>
		Degrees Receieved:
		<br/><input type="checkbox" name="BA" value="BA"> BA
		<br/><input type="checkbox" name="MA" value="MA"> MA
		<br/><input type="checkbox" name="Phd" value="Phd"> Phd
	</p>
	<p>
		<input type="submit" value='Submit Information'>
	</p>
</form>
<?php
		$firstname = $_POST['firstname'];
		if (isset($_POST['BA']))
		{
			$BA = $_POST['BA'];
		} else {
			$BA = "";
		}
		if (isset($_POST['MA']))
		{
			$MA = $_POST['MA'];
		} else {
			$MA = "";
		}
		if (isset($_POST['Phd']))
		{
			$Phd = $_POST['Phd'];
		} else {
			$Phd = "";
		}
		print "<p>Hi you are $firstname and you are";
		print " honored with degrees are:</p>";
		print "<p>$BA</p>";
		print "<p>$MA</p>";
		print "<p>$Phd</p>";
?>
-----------------------------------------------------------------------------------------------------------------------
Using Radio_buttons:
--------------------
<form method="post" action='104_using_radiobuttons.php'>
	<p>
		Name :<input type="text" name="firstname" size="30">
	</p>
	<p>
		Employment Type: <input type="radio" name="etype" value="Fulltime" checked="checked"> Full-Time
						 <input type="radio" name="etype" value="Parttime"> Part-Time
	</p>

	<p>
		<input type="submit" value="Submit Information">
	</p>
</form>
<?php
		$firstname = $_POST['firstname'];
		$etype = $_POST['etype'];

		print "<p> Hi! You are <span class='textblue'> $firstname </span>";
		print " and your employment type is: ";
		print "<span class='textblue'>$etype</span></p>";
?>
-----------------------------------------------------------------------------------------------------------------------
Assigning Variables:
--------------------
<form method="post" action="105_assigning_variables.php">
		<p>
			FirstName:<br/><input type="text" name="firstname" size="30">
			<br/>LastName:<br/><input type="text" name="lastname" size="30">
			<br/>Age:<br/><input type="number" name="age" size="3">
			<br><br/><input type="submit" value="submit information">
		</p>
</form>
<?php
		$firstname = $_POST['firstname'];
		$lastname = $_POST['lastname'];
		$age = $_POST['age'];
		$fullname = "$firstname $lastname";
		$factor = 5;
		$ageplus = $age + $factor;
		// To get the current year use date() function
		// Here we use 'Y' to get the year in 4 digit form,for eg.,2018
		$currentyear = date('Y');
		$bornyear = $currentyear - $ageplus;
		print "<p> Hi! You are $fullname and ";
		print "you said your age is $age ";
		print "but i bet your age is $ageplus";
		print " and you born in the year $bornyear</p>";
?>
-----------------------------------------------------------------------------------------------------------------------
Appending_text:
---------------
<form method="post" action='107_appending_text.php'>
		<p>
			FirstName:<br/><input type="tex" name="firstname" size="30">
		</p>
		<p>
			LastName:<br/><input type="text" name="lastname" size="30">
		</p>
		<p>
			Age:<br/><input type="number" name="age" size="3">
		</p>
		<p>
			<input type="submit" value="Submit Information">
		</p>
</form>
<?php
		$firstname = $_POST['firstname'];
		$lastname = $_POST['lastname'];
		$age = $_POST['age'];
		// Here i am using '.' function to join the text/variables.
		$middlename = 'Mohiddin.';

		$fullname = $firstname." ".$middlename." ".$lastname;

		$factor =5;

		$ageplus = $age + $factor;

		$birth_year = date('Y')-$ageplus;

		print "<p> Regardless ".$fullname;
		print "<br/>Entered age is ".$age;
		print "<br/>But our profile shows your age is ".$ageplus;
		print "<br/>and your birth year is ".$birth_year;
		print "<br/>Current year is".date('Y')."</p>";

?>
-----------------------------------------------------------------------------------------------------------------------
String_Delimiters:
------------------
<form method='post' action='108_string_delimiters.php'>
		<p>
			FirstName:<br/>
			<input type="text" name="firstname">
		</p>
		<p>
			<input type="submit" value="Submit Information">
		</p>
</form>
<?php
		$firstname = $_POST['firstname'];
		//printing "Hey "Rafi!","Don't do that"
		// first_method
		print "<p>\"Hey \"$firstname!\",\"Don't do that.\"</p>";
		// Another_method
		print '<p>"Hey "'.$firstname.'"!,"Don\'t do that."</p>';
?>
-----------------------------------------------------------------------------------------------------------------------
Simple_math:
------------
<form method='post' action='109_simple_math.php'>
		<p>
			Number of Apples:<input type="number" name="apples" size="1">
		</p>
		<p>
			Numbers of Pears:<input type="number" name="pearls" size="1">
		</p>
		<p>
			<input type="submit" value='Submit Information'>
		</p>
</form>
<?php
	$apples = $_POST['apples'];
	$pearls = $_POST['pearls'];
	$diff = $apples-$pearls;
	$revdiff = -$diff;
	$prd = $apples*5;
	$sum = $apples+$pearls;
	$quo = $sum/3;
	$rem = $sum % 3;
	print "<p>The number of Apples is $apples and the number of pearls is $pearls.</p>";
	print "<p>There are $diff more apples than pearls</p>";
	print "<p>The reverse of that would be $revdiff</p>";
	print "<p>Five times as many apples would be $prd</p>";
	print "<p>If i divided the apples equally between three of us, each person would get $quo</p>";
	print number_format($quo,2);
	print "<p>If i divided by apples equally between of us, then there would be $rem apples left over</p>";
?>
-----------------------------------------------------------------------------------------------------------------------
Using_tables:
-------------
<form method="post" action="110_using_tables.php">
	<table>
		<tr>
			<th>Description</th>
			<th>Amount Entered</th>
		</tr>
		<tr>
			<td>Number of Apples:</td>
			<td><input type="text" name="apples" size="2"></td>
		</tr>
		<tr>
			<td>Number of Pearls:</td>
			<td><input type="text" name="pearls" size="2"></td>
		</tr>
		<tr>
			<td>
				<input type="submit" value="Submit Information">
			</td>
		</tr>
		</tr>
</table>
<?php
	$apples = $_POST['apples'];
	$pearls = $_POST['pearls'];
	$diff = $apples-$pearls;
	$revdiff = -$diff;
	$prd = $apples*5;
	$sum = $apples+$pearls;
	$quo = $sum/3;
	$rem = $sum % 3;
	?>
<table border="1" disabled="disabled">
		<tr>
			<th>Description</th>
			<th>Calculated Amount</th>
		</tr>
<?php
	print "<tr><td>The number of Apples and Pearls is</td><td>$sum</td></tr>";
	print "<tr><td>The number of apples more than pearls is</td><td>$diff</td></tr>";
	print "<tr><td>The reverse of that would be </td><td>$revdiff</td></tr>";
	print "<tr><td>Five times as many apples would be </td><td>$prd</td></tr>";
	print "<tr><td>If i divided the apples equally between us, each person would get </td><td>";
	print number_format($quo,2);
	print "</td></tr>";
	print "<tr><td>If i divided by apples equally between of us, then the apples left over are</td><td>$rem</td></tr>";
?>
</table>
-----------------------------------------------------------------------------------------------------------------------
 URL Parameters:

 //In this topics he discuss about how we can change values directly through url section that is passed through the HTML page by using get method.

 ----------------------------------------------------------------------------------------------------------------------

 GET vs POST:

 POST is a more secure method to hide information in the url bar, so when you pass values it wont show up in the url bar. So post is often considered as a secure method.

 <form action="site.php" method="post">
 		Name: <input type="text" name="name">
 		<br><br>
 		Password: <input type="Password" name="password">
 		<br><br>
 		<input type="submit">
 		<br><br>
 	</form>

 	<?php 
 		echo $_POST['name'];
 		echo $_POST['password'];
 	?>

-----------------------------------------------------------------------------------------------------------------------

Arrays: arrays are similar to variables but in arrays we can store any number values in it.

<?php 
 		$names = array('Areeb','rafi','zain','raees','irfan');
 		$names[5]='Ashraf';
 		echo $names[0];
 		echo count($names);	#to find the number of elements in array
 ?>
-----------------------------------------------------------------------------------------------------------------------

Associative arrays: Associative arrays store values in the form of key value pair.


 	<form action='site.php' method="post">
 		Student : <input type="text" name="student"><br>
 		<input type="submit">
 		<br><br>
 	</form>
 	<?php 
 		$grades = array('Areeb' => 'A+','Rafi' => 'A-', 'Zain' => 'B+' );
 		echo $grades[$_POST['student']];
 		$grades['zain'] = 'B-';
 		echo $grades['zain'];
 		echo '<br>';
 		echo count($grades);
 	?>

-----------------------------------------------------------------------------------------------------------------------

Functions: write the code once and reuse it, with n number of times.

<?php function sayHi($name, $age){
 		echo "Hello $name, you are $age old.<br>";
 	}
 	sayHi('Areeb',26);
 	sayHi('Rafi',10);
 	sayHi('Zain',9);
?>

-----------------------------------------------------------------------------------------------------------------------

Return statements: In the function, if we wrote anything below the return keyword then it will be ignored and it will not be executed.

<?php
 		function cube($num){
 			return $num * $num * $num;
 			echo "Hello";	//this line will be ignored to print as said in the definition
 		}

 		echo cube(4);	//returns 64
 ?>

-----------------------------------------------------------------------------------------------------------------------

If statements: 

EX-1:
<?php
 		$isMale = true;
 		$isTall = false;
 		if($isMale && $isTall){
 			echo "You are male and you are tall";
 		}elseif($isMale && !$isTall){
 			echo "You are male but not tall";
 		}elseif(!$isMale && $isTall){
 			echo "You are not male but you are tall";
 		}else{
 			echo "You are not male and not tall";
 		}
?>

EX-2: To find the maximum of two numbers?
<?php 
 		function getMax($num1,$num2){
 			if($num1>$num2){
 				return $num1;
 			}else{
 				return $num2;
 			}
 		}
 		echo getMax(2,3);	//returns 3
 	?>

EX-3: To find the maximum between 3 numbers?
<?php
 		function get_Max($num1,$num2,$num3){
 			if($num1 >= $num2 && $num1 >= $num3){
 				return $num1;
 			}elseif($num2 >= $num1 && $num2 >= $num3){
 				return $num2;
 			}else{
 				return $num3;
 			}
 		}
 		echo get_Max(1000,2000,1500);	//returns 2000
 ?>
EX-4:
<form method='post' action='111_if_statement.php'>
		<p>
			Name:<br/>
			<input type="text" name="firstname" size="30">
		</p>
		<p>
			Age:<br/>
			<input type="text" name="age" size="3">
		</p>
		<p>
			<input type="submit" value="Submit Information">
		</p>
</form>
<?php
		$firstname=$_POST['firstname'];
		$age=$_POST['age'];

		$current_year = date('Y');
		$birth_year = $current_year - $age;

		print "<p>Hi! $firstname</p>";
		if($age>50){
			print "<p>$firstname it's time to start your Retirement plan ASAP and give as much time as possibe in the path of ALLAH.</p>";
		}else{
			print "<p>$firstname you still have a life to enjoy and give time to your family and ALLAH.</p>";
		}
		print "<p>-END-</p>"
?>
-----------------------------------------------------------------------------------------------------------------------
Building calculator: 
--------------------

<form action='site.php' method='post'>
 		first_num: <input type="number" step ="0.01" name="num1"><br>
 		operand	 : <input type="text" name="op"><br>
 		second_num: <input type="number" step = "0.01" name="num2"><br>
 		<input type="submit">
 		<br><br>
</form>
<?php
 		$num1=$_POST['num1'];
 		$num2=$_POST['num2'];
 		$op = $_POST['op'];

 		if($op=='+'){
 			echo $num1 + $num2;
 		}elseif($op=='-'){
 			echo $num1 - $num2;
 		}elseif($op=='*'){
 			echo $num1 * $num2;
 		}elseif($op=='/'){
 			echo $num1 / $num2;
 		}elseif($op=='%'){
 			echo $num1 % $num2;
 		}else{
 			echo "Invalid operand";
 		}
?>

-----------------------------------------------------------------------------------------------------------------------
Switch Statements: 
------------------

<form action='site.php' method='post'>
 		What was your grade?
 		<input type="text" name="grade"><br>
 		<input type="submit">
</form>
<?php
 		$grade=$_POST['grade'];
 		switch($grade){
 			case 'A':
 				echo "You did amazing.";
 				break;
 			case 'B':
 				echo 'You did pretty Good';
 				break;
 			case 'C':
 				echo 'You did poorly';
 				break;
 			case 'D':
 				echo 'You did very poor';
 				break;
 			case 'E':
 				echo 'YOU FAIL';
 				break;
 			default:
 				echo "Invalid Grade.";
 		}
?>

-----------------------------------------------------------------------------------------------------------------------

While Loops: While loops will execute the code until it satisfies the expression

<?php
 		$number = 1;
 		while($number<=5){
 			echo $number;
 			echo '<br>';
 			$number++;
 		}
?>

Do While: Do while will excute the code atleast once,although if the condition does not match.

<?php
 		$number=6;
 		do{
 			echo "$number<br>";
 			$number++;
 		}while($number<=5);
?>

-----------------------------------------------------------------------------------------------------------------------
For Loops:
----------
<?php
 		for($i=0;$i<=5;$i++){
 		echo "$i <br>";
 		}
 	?>

 	<?php
 		$luckynumbers = array(2,4,6,8,12,16,18);
 		for($i=0;$i<count($luckynumbers);$i++){
 			
 			//getting and printing the array list items one by one
 			echo "$luckynumbers[$i]<br>";
 		}
?>

-----------------------------------------------------------------------------------------------------------------------
Comments:
---------
single line comments:	// --single line comments
						#  --single line comments
Multi line comments:	/* ---
						   ---
						*/

-----------------------------------------------------------------------------------------------------------------------

Inlude HTML: It is a very useful when you are working with multiple web pages of the same project. So you create one base html file and use in any web page that you want to display the same content in that web page. 

Ex: <?php include "header.html"?>
	<p>HTML Content</p>
	<?php include "footer.html"?>

-----------------------------------------------------------------------------------------------------------------------

Include PHP: In the same way we can also include php file as we seen in html file.

<?php 
	$title = 'Areeb den\'s';
	$author='Areeb';
	$WordCount=400;
	include 'action-header.html';
?>

<?php
	include 'func-action.php';
	echo $totalmiles;
	echo '<br>';
	sayHi('Areeb'); 		

?>

-----------------------------------------------------------------------------------------------------------------------

Classes & Objects:
------------------
Classes are used to create a custom datatypes, like for example in the realworld if we need to specify an object then we use classes to describe that object.

Class: class is a blue print of an object.
object : object is an instance of class.

<?php

  	class Book{
  		 var $title;
  		 var $author;
  		 var $pages;
  	}

  	$book1 = new Book;
  	$book1->title='Harry Potter';
  	$book1->author='JK Rowling';
  	$book1->pages=400;

  	echo $book1->title;

  	echo "<br>";
  	
  	$book2 = new Book;
  	$book2->title='Lord Of the Rings';
  	$book2->author='Toiken';
  	$book2->pages=800;

  	echo $book2->title;
?>

-----------------------------------------------------------------------------------------------------------------------

Constructors: Constructors are useful when we are creating an object of the class. for example if we are creating an object of a class, for each object we have to specify values individually, by doing that it will increase the length of the code, so to overcome this problem we use constructor function in creating an object of a class.

<?php

class Book{
  		 var $title;
  		 var $author;
  		 var $pages;

  	function __construct($aTitle,$aAuthor,$aPages){
  		$this->title = $aTitle;
  		$this->author = $aAuthor;
  		$this->pages = $aPages;
  	}
}
	$Book1 = new Book('Harry Potter','JK Rowling',400);
	
	//we can also change the title although if we've already passed in the argument.
	$Book1->title = 'James Bond';
	echo $Book1->title;
	
	$Book2 = new Book('Lords of the Rings','Toisen',800);
?>
-----------------------------------------------------------------------------------------------------------------------

Object Funtions: These are used inside the class. It will increase the modularity of the object so that we can check any instances of an object by using object functions.

<?php
	class Student{

	var $name;
	var $major;
	var $gpa;

	function __construct($name,$major,$gpa){
		$this->name = $name;
		$this->major = $major;
		$this->gpa = $gpa;
	}

	function hasHonors(){
		if($this->gpa >= 3.5){
			return "true";
		}
		return "false";
		}
	}

	$student1 = new Student('Areeb','Computer Science',4.6);
	$student2 = new Student('Rafi','Doctor',3.0);

	echo $student1->hasHonors();
?>

-----------------------------------------------------------------------------------------------------------------------

Getters & Setters: are used inside the class, that allows us to access the attributes of those classes.

<?php
	class Movie{
		public $title;
		private $rating;

		function __construct($title,$rating){
			$this->title = $title;
			$this->setRating($rating);
		}

		function getRating(){
			return $this->rating;
		}

		function setRating($rating){
			if($rating == 'G' || $rating == 'PG' || $rating == 'PG-13' || $rating == 'R' || $rating == 'NR'){
				$this->rating = $rating;
			}else{
				$this->rating = "NR";
			}

		}
	}
	$avengers = new Movie('Avengers','PG');
	echo $avengers -> getRating();	//returns PG
?>

-----------------------------------------------------------------------------------------------------------------------
Inheritance:
------------
